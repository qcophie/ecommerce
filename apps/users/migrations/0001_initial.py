# Generated by Django 3.2.9 on 2022-01-31 21:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=100, verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='PROFILE/2022/01/31/21/27/20184b43ce242b4c2c9ba63052ad31bbc6/', verbose_name='Profile Pic')),
                ('phone_number', models.CharField(blank=True, max_length=100, null=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+233200000000' or '0200000000'. Up to 15 digits allowed.", regex='^\\+?1?\\d{10,15}$')])),
                ('address', models.CharField(choices=[('within_tema', 'Within Tema'), ('within_accra', 'Within Accra'), ('outside_accra', 'Outside Accra')], default='0', max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=True)),
                ('is_first_password', models.BooleanField(default=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('permission', models.CharField(choices=[('0', 'Super Admin'), ('1', 'Admin'), ('2', 'Individual'), ('3', 'Organization'), ('4', 'Guest')], default='0', max_length=100)),
                ('temporal_login_fails', models.IntegerField(default=0)),
                ('permanent_login_fails', models.IntegerField(default=0)),
                ('signup_confirmation', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Ecommerce User',
                'verbose_name_plural': 'Ecommerce User',
                'ordering': ('-created', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('read', models.BooleanField(default=False)),
                ('notification_type', models.CharField(blank=True, max_length=1000, null=True)),
                ('title', models.CharField(blank=True, max_length=1000, null=True)),
                ('message', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('user_in_question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Notification',
                'ordering': ('-date_created',),
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('module', models.CharField(blank=True, max_length=1000, null=True)),
                ('action', models.CharField(blank=True, max_length=1000, null=True)),
                ('description', models.CharField(blank=True, max_length=1000, null=True)),
                ('device', models.CharField(blank=True, max_length=1000, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('country', models.CharField(blank=True, max_length=1000, null=True)),
                ('longitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('latitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('datecreated', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Activities',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='StoredPass',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hashed', models.CharField(blank=True, max_length=1000, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_hashes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FailedLogin',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ip_address', models.CharField(blank=True, max_length=1000, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='failed_login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
